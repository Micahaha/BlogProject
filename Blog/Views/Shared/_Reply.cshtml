@model Comment

@section Scripts
{
    <script>
        function likeComment(blogId, commentId, dislikeCountElementId, likeCountElementId) {
            // Get a reference to the like count element
            var likeCountElement = document.getElementById(likeCountElementId);
            var dislikeCountElement = document.getElementById(dislikeCountElementId);

            // Make the AJAX request to the Like action
            fetch(`/Home/Like?blogId=${blogId}&commentId=${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the like count element exists
                    if (likeCountElement && dislikeCountElement) {
                        // Update the like count on the page
                        console.log('like Count exists')
                        console.log(`likes=${data.likes}`)
                        likeCountElement.textContent = `${data.likes}`;
                        dislikeCountElement.textContent = `${data.dislikes}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

        function dislikeComment(blogId, commentId, dislikeCountElementId, likeCountElementId) {
            // Get a reference to the like count element
            var likeCountElement = document.getElementById(likeCountElementId);
            var dislikeCountElement = document.getElementById(dislikeCountElementId);

            // Make the AJAX request to the Like action
            fetch(`/Home/Dislike?blogId=${blogId}&commentId=${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the like count element exists
                    if (likeCountElement && dislikeCountElement) {
                        // Update the like count on the page
                        console.log('like Count exists')
                        console.log(`likes=${data.likes}`)
                        likeCountElement.textContent = `${data.likes}`;
                        dislikeCountElement.textContent = `${data.dislikes}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

    </script>
}

@if (User.Identity.IsAuthenticated)
{
    <div id="bootstrap-overrides-inside"class="col p-3">
        <div class="col">
            <form asp-controller="Home" asp-action="_Reply" method="post">
                <input type="hidden" name="commentId" value="@Model.Id" />
                <input type="text" name="text" class="form-control" placeholder="Replying as @User.Identity.Name">
                <div class="col p-3">
                    <button class="btn btn-dark btn-primary" type="submit">Reply</button>
                </div>
            </form>
        </div>
    </div>
}


@if(Model.Replies?.Count() > 0)
@foreach (var reply in Model.Replies)
{  
            <h5 class="text-primary text-white fw-lighter">@reply.User <text class="fs-6 text-secondary">@reply.CreatedDateTime <p>Replying to @reply.ParentComment.User</p></text></h5>
        <p class="fw-light card-text">@reply.Text</p>
        <p>
            <i class="bi bi-hand-thumbs-up"></i>
            <span id="likeCount_@reply.Id">@reply.Likes</span>
            <i class="bi bi-hand-thumbs-down"></i>
            <span id="dislikeCount_@reply.Id">@reply.Dislikes</span>
        </p>

        <div class="d-flex">
            <div class="col p-3">
                <button class="btn btn-dark" onclick="likeComment(@Model.BlogId, @reply.Id, 'dislikeCount_@reply.Id','likeCount_@reply.Id')">
                    <i class="bi bi-hand-thumbs-up p-1"></i>Like
                </button>
            </div>

            <div class="col p-3">
                <button class="btn btn-dark" onclick="dislikeComment(@Model.BlogId, @reply.Id, 'dislikeCount_@reply.Id','likeCount_@reply.Id')">
                    <i class="bi bi-hand-thumbs-down p-1"></i>Dislike
                </button>
            </div>
        </div>

        <div style="background-color: red;" class="container-sm" id="reply_container">

        </div>
}
@model Blog


@section Scripts
    {
    <script>
        function likeComment(blogId, commentId, dislikeCountElementId, likeCountElementId) {
            // Get a reference to the like count element
            var likeCountElement = document.getElementById(likeCountElementId);
            var dislikeCountElement = document.getElementById(dislikeCountElementId);

            // Make the AJAX request to the Like action
            fetch(`/Home/Like?blogId=${blogId}&commentId=${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the like count element exists
                    if (likeCountElement && dislikeCountElement) {
                        // Update the like count on the page
                        console.log('like Count exists')
                        console.log(`likes=${data.likes}`)
                        likeCountElement.textContent = `${data.likes}`;
                        dislikeCountElement.textContent = `${data.dislikes}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

        function dislikeComment(blogId, commentId, dislikeCountElementId, likeCountElementId) {
            // Get a reference to the like count element
            var likeCountElement = document.getElementById(likeCountElementId);
            var dislikeCountElement = document.getElementById(dislikeCountElementId);

            // Make the AJAX request to the Like action
            fetch(`/Home/Dislike?blogId=${blogId}&commentId=${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the like count element exists
                    if (likeCountElement && dislikeCountElement) {
                        // Update the like count on the page
                        console.log('like Count exists')
                        console.log(`likes=${data.likes}`)
                        likeCountElement.textContent = `${data.likes}`;
                        dislikeCountElement.textContent = `${data.dislikes}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

        function LikeReply(blogId, replyId, commentId, dislikeCountElementId, likeCountElementId) {
            // Get a reference to the like count element
            var likeCountElement = document.getElementById(likeCountElementId);
            var dislikeCountElement = document.getElementById(dislikeCountElementId);

            // Make the AJAX request to the Like action
            fetch(`/Home/LikeReply?blogId=${blogId}&replyId=${replyId}&commentId=${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the like count element exists
                    if (likeCountElement && dislikeCountElement) {
                        // Update the like count on the page
                        console.log('like Count exists')
                        console.log(`likes=${data.likes}`)
                        likeCountElement.textContent = `${data.likes}`;
                        dislikeCountElement.textContent = `${data.dislikes}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

        function DislikeReply(blogId, replyId, commentId, dislikeCountElementId, likeCountElementId) {
            // Get a reference to the like count element
            var likeCountElement = document.getElementById(likeCountElementId);
            var dislikeCountElement = document.getElementById(dislikeCountElementId);

            // Make the AJAX request to the Like action
            fetch(`/Home/DislikeReply?blogId=${blogId}&replyId=${replyId}&commentId=${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the like count element exists
                    if (likeCountElement && dislikeCountElement) {
                        // Update the like count on the page
                        console.log('like Count exists')
                        console.log(`likes=${data.likes}`)
                        likeCountElement.textContent = `${data.likes}`;
                        dislikeCountElement.textContent = `${data.dislikes}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

      

    </script>
}


<div class="container p-3">
            <div class="row justify-content-center">
            <div class="col-8" id="text-blocks">
                <article class="blog-post rounded">
                    <h5 class="fw-bold">@Model.Tag.Name</h5> 
                    <h1 class="fw-bold blog-post-title display-2 lh-1">@Model.Title</h1>
                    <h2 class="fw-lighter fst-italic">@Model.Header</h2> 
                    <p class=" font-monospace blog-post-meta">@Model.CreatedDate by @Model.Author.User</p>
                    <hr />
                    <p>@Model.Description</p>
                    
                @if(Model.ThumbnailPathUrl != null)
                {
                    <hr />
                    <img src="/@Model.ThumbnailPathUrl" class="img-thumbnail rounded mx-auto d-block">
                }
                    <hr>
                </article>

               

                @if (Model.Comments.Count > 0)
                {
                     <h3 class="p-3">Comments</h3>
                @foreach (var comment in Model.Comments)
                {
                    <div id="comment_@comment.Id" class="border-start border-3 p-3">
                        <h5 class="text-primary text-white fw-lighter">@comment.User <text class="fs-6 text-secondary">@comment.CreatedDateTime</text></h5>
                        <p class="fw-light card-text">@comment.Text</p>
                        <p>
                            <i class="bi bi-hand-thumbs-up"></i>
                            <span id="likeCount_@comment.Id">@comment.Likes</span>
                            <i class="bi bi-hand-thumbs-down"></i>
                            <span id="dislikeCount_@comment.Id">@comment.Dislikes</span>
                        </p>

                        <div class="d-flex">
                            <div class="col p-3">
                                <button class="btn btn-dark" onclick="likeComment(@Model.BlogId, @comment.Id, 'dislikeCount_@comment.Id','likeCount_@comment.Id')">
                                    <i class="bi bi-hand-thumbs-up p-1"></i>Like
                                </button>
                            </div>

                            <div class="col p-3">
                                <button class="btn btn-dark" onclick="dislikeComment(@Model.BlogId, @comment.Id, 'dislikeCount_@comment.Id','likeCount_@comment.Id')">
                                    <i class="bi bi-hand-thumbs-down p-1"></i>Dislike
                                </button>
                            </div>

                           
                        </div>
                        <div class="container-sm" id="reply_container">
                            @await Html.PartialAsync("~/Views/Shared/_Reply.cshtml", comment) 
                         </div>
                    </div>
                }



                }

                @if (User.Identity.IsAuthenticated)
                {
                   <div class="col p-3">
                       <div class="col">     
                            <form asp-controller="Home" asp-action="AddComment" method="post">
                                <input type="hidden" name="blogId" value="@Model.BlogId" />
                                <input type="text"  name="text" class="form-control" placeholder="Posting as @User.Identity.Name">
                                <div class="col p-3">
                                    <button class="btn btn-dark btn-primary" type="submit">Send</button>
                                </div>
                           </form>
                        </div>
                   </div>
           
                }
            </div>
        </div>
</div>

volumes:
  datafiles:

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    volumes:
      - datafiles:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Firelegend101
      MYSQL_DATABASE: blog
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pFirelegend101"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  mvc:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Reference your custom NGINX config
      - ./certs:/etc/letsencrypt  # Mount SSL certificates directory
      - ./nginx_data:/var/www/certbot  # Temporary directory for Certbot challenges
    ports:
      - "80:80"   # HTTP (for Certbot HTTP challenge)
      - "443:443" # HTTPS
    depends_on:
      - mvc
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx_data:/var/www/certbot  # Shared volume with NGINX for challenge files
      - ./certs:/etc/letsencrypt  # Shared volume for certificates
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
